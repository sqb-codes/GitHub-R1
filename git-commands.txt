git basic commands

=> git status - check status of all files and folders
=> git init - initialize new repository

again check for status using:
=> git status

=> git add filename
- add files to staging area

=> git add .
- tracks all files and add them to staging area

=> git commit -m "file added"
- commit this file to repository but before running this command we need to login

=> git config --global user.email "emailId@domain.com"
=> git config --global user.name "Your name"

=> git log
- return the logs maintained

=> git branch
- return all branch available

=> git branch second-branch
- create another branch named as second-branch

=> git checkout -b third-branch
- create and switch to another branch named as third-branch

=> git checkout master
- switch to master branch

=> git checkout -- . 
- Jump back to the last Commit and remove any untracked changes

=> git merge second-branch
- merge other branches with master branch

=> git branch -D branch-name
- Delete the Branch named branch-name

=> git remote add origin URL
- connecting local repository to remote repository
- origin is the name of remote machine

=> git push -u origin main
=> git push -u origin master
- push changes to remote repository from local repository
- branch name can be different

=> git clone URL
- clone an existing repository

=> git diff
- know exactly what you changed, not just which files were changed

=> git ls-files
- list all files available in staging area

=> git rm filename
- remove a file from git, remove from staging area

=> git mv file_from file_to
- rename a file in git

=> git rm --cached filename
- Another useful thing you may want to do is to keep the file in your working tree but remove it from your staging area. In other words, you may want to keep the file on your hard drive but not have Git track it anymore.

=> git log -p -2
- One of the more helpful options is -p or --patch, which shows the difference (the patch output) introduced in each commit. You can also limit the number of log entries displayed, such as using -2 to show only the last two entries.

=> git log --pretty=format:"%h - %an, %ar : %s"
- specify format explicitly

=> git log --since=2.weeks
- this command gets the list of commits made in the last two weeks

=> git remote -v
- shows you the URLs that Git has stored for the shortname to be used when reading and writing to that remote

=> git remote rename pb paul
- change a remoteâ€™s shortname. If you want to rename pb to paul, you can do so

=> git remote remove paul
- remove a remote

=> git config --local --list
- show all details of local repository

=> git switch branch_name
- switch to another branch

=> git switch -c branch_name
- switch and create another branch



